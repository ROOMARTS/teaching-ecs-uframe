// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace ECSDemo {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using UnityEngine;
    using uFrame.ECS;
    using UniRx;
    
    
    [uFrame.Attributes.uFrameIdentifier("58240dd8-8f12-4b8c-b689-c5da36b9a235")]
    public partial class LevelComponent : uFrame.ECS.EcsComponent {
        
        [UnityEngine.SerializeField()]
        private Int32 _Level;
        
        [UnityEngine.SerializeField()]
        private Int32 _CurrentXp;
        
        [UnityEngine.SerializeField()]
        private Int32 _MaxXp;
        
        private Subject<PropertyChangedEvent<Int32>> _LevelObservable;
        
        private PropertyChangedEvent<Int32> _LevelEvent;
        
        private Subject<PropertyChangedEvent<Int32>> _CurrentXpObservable;
        
        private PropertyChangedEvent<Int32> _CurrentXpEvent;
        
        private Subject<PropertyChangedEvent<Int32>> _MaxXpObservable;
        
        private PropertyChangedEvent<Int32> _MaxXpEvent;
        
        public int ComponentID {
            get {
                return 29;
            }
        }
        
        public IObservable<PropertyChangedEvent<Int32>> LevelObservable {
            get {
                return _LevelObservable ?? (_LevelObservable = new Subject<PropertyChangedEvent<Int32>>());
            }
        }
        
        public IObservable<PropertyChangedEvent<Int32>> CurrentXpObservable {
            get {
                return _CurrentXpObservable ?? (_CurrentXpObservable = new Subject<PropertyChangedEvent<Int32>>());
            }
        }
        
        public IObservable<PropertyChangedEvent<Int32>> MaxXpObservable {
            get {
                return _MaxXpObservable ?? (_MaxXpObservable = new Subject<PropertyChangedEvent<Int32>>());
            }
        }
        
        public Int32 Level {
            get {
                return _Level;
            }
            set {
                SetLevel(value);
            }
        }
        
        public Int32 CurrentXp {
            get {
                return _CurrentXp;
            }
            set {
                SetCurrentXp(value);
            }
        }
        
        public Int32 MaxXp {
            get {
                return _MaxXp;
            }
            set {
                SetMaxXp(value);
            }
        }
        
        public virtual void SetLevel(Int32 value) {
            SetProperty(ref _Level, value, ref _LevelEvent, _LevelObservable);
        }
        
        public virtual void SetCurrentXp(Int32 value) {
            SetProperty(ref _CurrentXp, value, ref _CurrentXpEvent, _CurrentXpObservable);
        }
        
        public virtual void SetMaxXp(Int32 value) {
            SetProperty(ref _MaxXp, value, ref _MaxXpEvent, _MaxXpObservable);
        }
    }
}
