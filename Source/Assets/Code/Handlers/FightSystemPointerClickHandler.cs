// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace ECSDemo {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using uFrame.Kernel;
    using UnityEngine;
    
    
    public class FightSystemPointerClickHandler {
        
        public AttackingEntity Source;
        
        private uFrame.ECS.PointerClickDispatcher _Event;
        
        private uFrame.ECS.EcsSystem _System;
        
        private object ActionNode1_message = default( System.Object );
        
        private string StringNode2 = "AttackSystem - Entity attacked.";
        
        private ECSDemo.EntityAttacked PublishEventNode3_Result = default( ECSDemo.EntityAttacked );
        
        public uFrame.ECS.PointerClickDispatcher Event {
            get {
                return _Event;
            }
            set {
                _Event = value;
            }
        }
        
        public uFrame.ECS.EcsSystem System {
            get {
                return _System;
            }
            set {
                _System = value;
            }
        }
        
        public virtual System.Collections.IEnumerator Execute() {
            ActionNode1_message = StringNode2;
            // ActionNode
            while (this.DebugInfo("","63191a25-d053-45ad-98e7-0b27872544a9", this) == 1) yield return null;
            // Visit uFrame.Actions.DebugLibrary.LogMessage
            uFrame.Actions.DebugLibrary.LogMessage(ActionNode1_message);
            // PublishEventNode
            while (this.DebugInfo("63191a25-d053-45ad-98e7-0b27872544a9","b247b012-b03e-4f3b-aca3-553347375e23", this) == 1) yield return null;
            var PublishEventNode3_Event = new EntityAttacked();
            PublishEventNode3_Event.Attacker = Source.Entity.EntityId;
            PublishEventNode3_Event.Defender = Source.TargetComponent.Target;
            System.Publish(PublishEventNode3_Event);
            PublishEventNode3_Event = PublishEventNode3_Result;
            yield break;
        }
    }
}
