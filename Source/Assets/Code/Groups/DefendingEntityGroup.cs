// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace ECSDemo {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using uFrame.ECS;
    using UniRx;
    using uFrame.Kernel;
    
    
    public partial class DefendingEntityGroup : ReactiveGroup<DefendingEntity> {
        
        private IEcsComponentManagerOf<HealthComponent> _HealthComponentManager;
        
        private int lastEntityId;
        
        private HealthComponent HealthComponent;
        
        public IEcsComponentManagerOf<HealthComponent> HealthComponentManager {
            get {
                return _HealthComponentManager;
            }
            set {
                _HealthComponentManager = value;
            }
        }
        
        public override System.Collections.Generic.IEnumerable<UniRx.IObservable<int>> Install(uFrame.ECS.IComponentSystem componentSystem) {
            HealthComponentManager = componentSystem.RegisterComponent<HealthComponent>();
            yield return HealthComponentManager.CreatedObservable.Select(_=>_.EntityId);;
            yield return HealthComponentManager.RemovedObservable.Select(_=>_.EntityId);;
        }
        
        public override bool Match(int entityId) {
            lastEntityId = entityId;
            if ((HealthComponent = HealthComponentManager[entityId]) == null) {
                return false;
            }
            return true;
        }
        
        public override DefendingEntity Select() {
            var item = new DefendingEntity();;
            item.EntityId = lastEntityId;
            item.HealthComponent = HealthComponent;
            return item;
        }
    }
}
